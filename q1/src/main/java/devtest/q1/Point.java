package devtest.q1;

public class Point
{

   private final double x;
   private final double y;

   public Point(double xIn, double yIn)
   {
      x = xIn;
      y = yIn;
   }

   public double getX()
   {
      return x;
   }

   public double getY()
   {
      return y;
   }

   public double getDistance(final Point other)
   {
      final double deltaX = x - other.x;
      final double deltaY = y - other.y;

      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));
   }

   @Override
   public String toString()
   {
      return "(" + x + "," + y + ")";
   }

   @Override
   public int hashCode()
   {
      // generated by Eclipse

      int prime = 31;
      int result = 1;
      long temp;
      temp = Double.doubleToLongBits(x);
      result = prime * result + (int) (temp ^ (temp >>> 32));
      temp = Double.doubleToLongBits(y);
      result = prime * result + (int) (temp ^ (temp >>> 32));
      return result;
   }

   @Override
   public boolean equals(final Object obj)
   {
      // generated by Eclipse

      if (this == obj)
      {
         return true;
      }
      if (obj == null)
      {
         return false;
      }
      if (getClass() != obj.getClass())
      {
         return false;
      }
      Point other = (Point) obj;
      if (Double.doubleToLongBits(x) != Double.doubleToLongBits(other.x))
      {
         return false;
      }
      if (Double.doubleToLongBits(y) != Double.doubleToLongBits(other.y))
      {
         return false;
      }
      return true;
   }
}
